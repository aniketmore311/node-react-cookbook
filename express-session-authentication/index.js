//@ts-check
// this entire file was generated by chatgpt
const express = require("express");
const session = require("express-session");
const sqlite3 = require("sqlite3").verbose();

const app = express();
app.use(express.urlencoded({ extended: false }));

// SQLite database setup
const db = new sqlite3.Database("./users.db");
db.serialize(() => {
  db.run(
    "CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT, password TEXT, isAdmin INTEGER)"
  );
  db.run(
    "INSERT INTO users (username, password, isAdmin) VALUES ('user1', 'pass1', 0)"
  );
  db.run(
    "INSERT INTO users (username, password, isAdmin) VALUES ('admin', 'adminpass', 1)"
  );
});

// Session setup
app.use(
  session({
    secret: "mysecretkey",
    resave: false,
    saveUninitialized: true,
  })
);

// Middleware for checking user authentication
const requireAuth = (req, res, next) => {
  if (req.session.authenticated) {
    next();
  } else {
    res.redirect("/");
  }
};

// Middleware for checking user authorization
const requireAdmin = (req, res, next) => {
  if (req.session.isAdmin) {
    next();
  } else {
    res.status(401).send("Unauthorized");
  }
};

// Login page
app.get("/", (req, res) => {
  res.send(`
    <h1>Login</h1>
    <form method="post" action="/login">
      <input type="text" name="username" placeholder="Enter username"><br>
      <input type="password" name="password" placeholder="Enter password"><br>
      <button type="submit">Login</button>
    </form>
  `);
});

// Login handler
app.post("/login", (req, res) => {
  const { username, password } = req.body;
  if (username && password) {
    db.get("SELECT * FROM users WHERE username = ?", [username], (err, row) => {
      if (err) {
        console.error(err.message);
        res.send("Error occurred");
      }
      if (row && row.password === password) {
        // Create a session for the authenticated user
        req.session.authenticated = true;
        req.session.username = username;
        req.session.isAdmin = row.isAdmin;
        res.redirect("/user/home");
      } else {
        res.send("Incorrect username or password");
      }
    });
  } else {
    res.send("Username and password are required");
  }
});

// User home page
app.get("/user/home", requireAuth, (req, res) => {
  res.send(
    `<h1>Welcome ${req.session.username}!</h1><a href="/logout">Logout</a>`
  );
});

// Admin home page
app.get("/admin/home", requireAuth, requireAdmin, (req, res) => {
  res.send(
    `<h1>Welcome ${req.session.username}!</h1><p>You have admin privileges.</p><a href="/logout">Logout</a>`
  );
});

// Logout handler
app.get("/logout", (req, res) => {
  req.session.destroy((err) => {
    if (err) {
      console.error(err);
    } else {
      res.redirect("/");
    }
  });
});

app.listen(3000, () => {
  console.log("Server started on port 3000");
});
